name: build and push to GHCR

on:
  push:
    tags:
      - "*"
    branches:
      - "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Authenticate with GitHub
        run: |
          git remote set-url origin "https://x-access-token:${{ secrets.GHCR_PAT }}@github.com/${{ github.repository }}.git"

      - name: Fetch all tags
        run: |
          # Ensure we have all tags locally
          git fetch --prune --tags

      - name: Bump Patch Version
        id: bump
        run: |
          # Find the latest valid semver tag
          LATEST_TAG=$(git tag --list --sort=v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | tail -n 1)
          echo "Latest tag found: $LATEST_TAG"

          if [ -z "$LATEST_TAG" ]; then
            # If no valid semver tags, start at 1.0.0
            NEW_TAG="1.0.0"
          else
            # Parse the existing version
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
            # Bump the PATCH by 1
            PATCH=$((PATCH + 1))
            NEW_TAG="${MAJOR}.${MINOR}.${PATCH}"
          fi

          echo "New tag will be: $NEW_TAG"

          # Create and push the new tag
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"

          # Export the new version for later steps
          echo "VERSION=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Login to Docker Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository_owner }}/cookbook:latest
            ${{ github.repository_owner }}/cookbook:${{ steps.bump.outputs.VERSION }}
          file: ContainerFile
